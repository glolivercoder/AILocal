#!/usr/bin/env python3
"""
Script de instala√ß√£o e configura√ß√£o do Stata MCP
Baseado em: https://github.com/hanlulong/stata-mcp.git
"""

import subprocess
import sys
import os
from pathlib import Path

def run_command(command, description=""):
    """Executa um comando e retorna o resultado"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ {description} - Sucesso")
            return True, result.stdout
        else:
            print(f"‚ùå {description} - Erro: {result.stderr}")
            return False, result.stderr
    except Exception as e:
        print(f"‚ùå {description} - Exce√ß√£o: {e}")
        return False, str(e)

def check_prerequisites():
    """Verifica pr√©-requisitos"""
    print("üîç Verificando pr√©-requisitos...")
    
    # Verificar Python
    success, output = run_command("python --version", "Verificando Python")
    if not success:
        print("‚ùå Python n√£o encontrado. Instale Python 3.11+ primeiro.")
        return False
    
    # Verificar npm
    success, output = run_command("npm --version", "Verificando npm")
    if not success:
        print("‚ùå npm n√£o encontrado. Instale Node.js primeiro.")
        return False
    
    # Verificar git
    success, output = run_command("git --version", "Verificando git")
    if not success:
        print("‚ùå git n√£o encontrado. Instale Git primeiro.")
        return False
    
    print("‚úÖ Todos os pr√©-requisitos atendidos!")
    return True

def install_stata_mcp_extension():
    """Instala a extens√£o Stata MCP"""
    print("\nüì¶ Instalando extens√£o Stata MCP...")
    
    # Op√ß√£o 1: Via marketplace (se code estiver dispon√≠vel)
    success, output = run_command("code --version", "Verificando VS Code CLI")
    if success:
        print("üîÑ Tentando instalar via marketplace...")
        success, output = run_command(
            "code --install-extension deepecon.stata-mcp",
            "Instalando extens√£o via marketplace"
        )
        if success:
            return True
    
    # Op√ß√£o 2: Via Git
    print("üîÑ Instalando via Git...")
    
    # Criar diret√≥rio tempor√°rio
    temp_dir = Path("temp") / "stata-mcp"
    temp_dir.mkdir(parents=True, exist_ok=True)
    
    # Clonar reposit√≥rio
    success, output = run_command(
        f"git clone https://github.com/hanlulong/stata-mcp.git {temp_dir}",
        "Clonando reposit√≥rio Stata MCP"
    )
    if not success:
        return False
    
    # Verificar se h√° requirements.txt
    requirements_file = temp_dir / "requirements.txt"
    if requirements_file.exists():
        success, output = run_command(
            f"pip install -r {requirements_file}",
            "Instalando depend√™ncias Python"
        )
        if not success:
            return False
    
    # Verificar se h√° package.json
    package_file = temp_dir / "package.json"
    if package_file.exists():
        success, output = run_command(
            f"cd {temp_dir} && npm install",
            "Instalando depend√™ncias Node.js"
        )
        if not success:
            return False
    
    print(f"‚úÖ Extens√£o instalada em: {temp_dir}")
    return True

def configure_cursor_mcp():
    """Configura o Stata MCP no Cursor"""
    print("\n‚öôÔ∏è Configurando Stata MCP no Cursor...")
    
    try:
        from cursor_mcp_manager import CursorMCPManager
        
        manager = CursorMCPManager()
        
        # Adicionar Stata MCP √† configura√ß√£o
        stata_config = {
            "name": "Stata MCP",
            "package": "stata-mcp",
            "port": 4000,
            "description": "Integra√ß√£o Stata via MCP (an√°lise estat√≠stica)",
            "category": "statistics"
        }
        
        manager.mcps["stata-mcp"] = stata_config
        
        # Instalar no Cursor
        success, message = manager.install_mcps_to_cursor(["stata-mcp"])
        
        if success:
            print(f"‚úÖ {message}")
            return True
        else:
            print(f"‚ùå {message}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao configurar Cursor: {e}")
        return False

def create_stata_mcp_config():
    """Cria arquivo de configura√ß√£o para o Stata MCP"""
    print("\nüìÑ Criando configura√ß√£o Stata MCP...")
    
    config = {
        "mcpServers": {
            "stata-mcp": {
                "command": "npx",
                "args": ["stata-mcp-server", "--port", "4000"],
                "env": {}
            }
        }
    }
    
    # Salvar configura√ß√£o
    config_dir = Path("config")
    config_dir.mkdir(exist_ok=True)
    
    config_file = config_dir / "stata_mcp_config.json"
    
    import json
    with open(config_file, 'w', encoding='utf-8') as f:
        json.dump(config, f, indent=2, ensure_ascii=False)
    
    print(f"‚úÖ Configura√ß√£o salva em: {config_file}")
    return True

def create_installation_guide():
    """Cria guia de instala√ß√£o"""
    print("\nüìñ Criando guia de instala√ß√£o...")
    
    guide = """# Guia de Instala√ß√£o - Stata MCP

## O que foi instalado

‚úÖ Extens√£o Stata MCP clonada do reposit√≥rio
‚úÖ Depend√™ncias Python instaladas
‚úÖ Configura√ß√£o MCP criada
‚úÖ Integra√ß√£o com Cursor configurada

## Pr√≥ximos passos

### 1. Instalar Stata
- Baixe e instale Stata 17+ (MP, SE ou BE)
- Certifique-se de que o Stata est√° no PATH do sistema

### 2. Configurar Cursor
1. Abra o Cursor
2. V√° para Configura√ß√µes (Ctrl+,)
3. Procure por "MCP" ou "Model Context Protocol"
4. Adicione a configura√ß√£o do arquivo: config/stata_mcp_config.json

### 3. Testar integra√ß√£o
1. Abra um arquivo .do no Cursor
2. A extens√£o deve aparecer na barra de status
3. Use Ctrl+Shift+P e digite "Stata" para ver comandos

### 4. Configura√ß√£o avan√ßada
Para configurar edi√ß√£o espec√≠fica do Stata:
```json
{
  "stata-vscode.stataEdition": "MP"
}
```

## Troubleshooting

### Problemas comuns:
- **Extens√£o n√£o carrega**: Verifique Python 3.11+
- **Stata n√£o encontrado**: Verifique instala√ß√£o e PATH
- **Erro de conex√£o**: Verifique se porta 4000 est√° livre

### Logs:
- VS Code: View > Output > Stata MCP
- Cursor: Help > Toggle Developer Tools > Console

## Recursos

- [Reposit√≥rio original](https://github.com/hanlulong/stata-mcp.git)
- [Documenta√ß√£o oficial](https://github.com/hanlulong/stata-mcp#readme)
- [VS Code Marketplace](https://marketplace.visualstudio.com/items?itemName=deepecon.stata-mcp)

## Suporte

Para problemas espec√≠ficos:
1. Verifique os logs do editor
2. Consulte a documenta√ß√£o oficial
3. Abra uma issue no reposit√≥rio GitHub
"""
    
    guide_file = Path("config") / "STATA_MCP_GUIDE.md"
    guide_file.parent.mkdir(exist_ok=True)
    
    with open(guide_file, 'w', encoding='utf-8') as f:
        f.write(guide)
    
    print(f"‚úÖ Guia salvo em: {guide_file}")
    return True

def main():
    """Fun√ß√£o principal"""
    print("üöÄ Instalador Stata MCP Extension")
    print("=" * 50)
    print("Baseado em: https://github.com/hanlulong/stata-mcp.git")
    print()
    
    # Verificar pr√©-requisitos
    if not check_prerequisites():
        print("\n‚ùå Pr√©-requisitos n√£o atendidos. Instale as depend√™ncias primeiro.")
        return
    
    # Instalar extens√£o
    if not install_stata_mcp_extension():
        print("\n‚ùå Falha na instala√ß√£o da extens√£o.")
        return
    
    # Configurar Cursor
    if not configure_cursor_mcp():
        print("\n‚ö†Ô∏è Falha na configura√ß√£o do Cursor, mas continuando...")
    
    # Criar configura√ß√£o
    if not create_stata_mcp_config():
        print("\n‚ùå Falha na cria√ß√£o da configura√ß√£o.")
        return
    
    # Criar guia
    if not create_installation_guide():
        print("\n‚ö†Ô∏è Falha na cria√ß√£o do guia.")
    
    print("\n" + "=" * 50)
    print("‚úÖ Instala√ß√£o conclu√≠da!")
    print("\nüìã Resumo:")
    print("- Extens√£o Stata MCP instalada")
    print("- Configura√ß√£o MCP criada")
    print("- Guia de instala√ß√£o gerado")
    print("\nüìñ Consulte: config/STATA_MCP_GUIDE.md")
    print("‚öôÔ∏è Configura√ß√£o: config/stata_mcp_config.json")
    print("\nüéØ Pr√≥ximo passo: Instalar Stata e configurar no Cursor")

if __name__ == "__main__":
    main() 